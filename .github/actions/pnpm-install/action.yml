########################################################################################
# pnpm 7/8+용 "pnpm install" composite action                                          #
#--------------------------------------------------------------------------------------#
# 요구사항: @setup/node가 먼저 실행되어야 합니다.                                           #
#                                                                                      #
# 워크플로우 단계에서의 사용법:                                                            #
#                                                                                      #
#      - name: 📥 Monorepo install                                                     #
#        uses: ./.github/actions/pnpm-install                                          #
#        with:                                                                         #
#          enable-corepack: false # (기본값)                                            #
#          cwd: ${{ github.workspace }}/apps/my-app # (기본값 = '.')                    #
#                                                                                      #
# 참고:                                                                                 #
#   - 최신: https://gist.github.com/belgattitude/838b2eba30c324f1f0033a797bab2e31      #
#                                                                                      #
# 버전:                                                                                 #
#   - 1.1.0 - 2023-07-15 - 프로젝트 맞춤 디렉토리 지원 추가.                              #
########################################################################################

name: 'PNPM install'
description: '캐시 활성화 상태에서 pnpm install을 실행합니다.'

inputs:
  enable-corepack:
    description: 'corepack 활성화'
    required: false
    default: 'false'
  cwd:
    description: "프로젝트가 루트에 위치하지 않은 경우, node의 process.cwd()를 변경합니다. 기본값은 process.cwd()입니다."
    required: false
    default: '.'
  store-path:
    description: 'pnpm 스토어 경로를 설정합니다. 고유한 경로를 사용하여 runner 간의 충돌을 방지합니다.'
    required: false
    default: ''

runs:
  using: 'composite'

  steps:
    - name: ⚙️ Enable Corepack
      if: ${{ inputs.enable-corepack == 'true' }}
      shell: bash
      working-directory: ${{ inputs.cwd }}
      run: |
        corepack enable
        echo "corepack enabled"

    - uses: pnpm/action-setup@v3
      if: ${{ inputs.enable-corepack == 'false' }}
      with:
        run_install: false
        # package.json에 packageManager 필드를 설정하지 않은 경우, 여기에 버전을 추가하세요.
        # version: 8.6.7

    - name: Expose pnpm config(s) through "$GITHUB_OUTPUT"
      id: pnpm-config
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: Cache rotation keys
      id: cache-rotation
      shell: bash
      run: |
        echo "YEAR_MONTH=$(/bin/date -u "+%Y%m")" >> $GITHUB_OUTPUT

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-

    # 시간이 지남에 따라 스토어가 커지는 것을 방지
    # 참고: 모노레포에서 너무 많이 줄여버리기 때문에 완벽하지는 않으므로,
    #       위와 같은 캐시 로테이션을 사용하는 방법이 권장됩니다.
    #- name: pnpm 스토어 정리
    #  shell: bash
    #  run: pnpm store prune

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.cwd }}
      run: |
        pnpm install --frozen-lockfile --prefer-offline --store-dir=${{ inputs.store-path }}
      env:
        # 기타 환경 변수
        HUSKY: '0' # 기본적으로 HUSKY 설치를 실행하지 않습니다.
